vendor_name = ModelSim
source_file = 1, D:/QuartusCode/HW1/HW1.v
source_file = 1, D:/QuartusCode/HW1/edge_detect.v
source_file = 1, D:/QuartusCode/HW1/db/HW1.cbx.xml
design_name = HW1
instance = comp, \uart_txd~output , uart_txd~output, HW1, 1
instance = comp, \clk_50M~input , clk_50M~input, HW1, 1
instance = comp, \clk_50M~inputclkctrl , clk_50M~inputclkctrl, HW1, 1
instance = comp, \write_value[1]~input , write_value[1]~input, HW1, 1
instance = comp, \catched_val[1]~feeder , catched_val[1]~feeder, HW1, 1
instance = comp, \reset_n~input , reset_n~input, HW1, 1
instance = comp, \reset_n~inputclkctrl , reset_n~inputclkctrl, HW1, 1
instance = comp, \write~input , write~input, HW1, 1
instance = comp, \wt|data_in_d1~0 , wt|data_in_d1~0, HW1, 1
instance = comp, \wt|data_in_d1 , wt|data_in_d1, HW1, 1
instance = comp, \wt|data_in_d2 , wt|data_in_d2, HW1, 1
instance = comp, \wt|neg_edge , wt|neg_edge, HW1, 1
instance = comp, \catched_val[1] , catched_val[1], HW1, 1
instance = comp, \Add0~0 , Add0~0, HW1, 1
instance = comp, \count[0] , count[0], HW1, 1
instance = comp, \Add0~2 , Add0~2, HW1, 1
instance = comp, \count[1] , count[1], HW1, 1
instance = comp, \Add0~4 , Add0~4, HW1, 1
instance = comp, \count[2] , count[2], HW1, 1
instance = comp, \Add0~6 , Add0~6, HW1, 1
instance = comp, \count~4 , count~4, HW1, 1
instance = comp, \count[3] , count[3], HW1, 1
instance = comp, \Add0~8 , Add0~8, HW1, 1
instance = comp, \count~3 , count~3, HW1, 1
instance = comp, \count[4] , count[4], HW1, 1
instance = comp, \Add0~10 , Add0~10, HW1, 1
instance = comp, \count[5] , count[5], HW1, 1
instance = comp, \Add0~12 , Add0~12, HW1, 1
instance = comp, \count~2 , count~2, HW1, 1
instance = comp, \count[6] , count[6], HW1, 1
instance = comp, \Add0~14 , Add0~14, HW1, 1
instance = comp, \count[7] , count[7], HW1, 1
instance = comp, \Add0~16 , Add0~16, HW1, 1
instance = comp, \count[8] , count[8], HW1, 1
instance = comp, \Add0~18 , Add0~18, HW1, 1
instance = comp, \count[9] , count[9], HW1, 1
instance = comp, \Add0~20 , Add0~20, HW1, 1
instance = comp, \count~1 , count~1, HW1, 1
instance = comp, \count[10] , count[10], HW1, 1
instance = comp, \Add0~22 , Add0~22, HW1, 1
instance = comp, \count[11] , count[11], HW1, 1
instance = comp, \Equal0~0 , Equal0~0, HW1, 1
instance = comp, \Add0~24 , Add0~24, HW1, 1
instance = comp, \count~0 , count~0, HW1, 1
instance = comp, \count[12] , count[12], HW1, 1
instance = comp, \Equal0~1 , Equal0~1, HW1, 1
instance = comp, \Equal0~2 , Equal0~2, HW1, 1
instance = comp, \Equal0~3 , Equal0~3, HW1, 1
instance = comp, \Add1~0 , Add1~0, HW1, 1
instance = comp, \bits_count~3 , bits_count~3, HW1, 1
instance = comp, \bits_count[2] , bits_count[2], HW1, 1
instance = comp, \Add1~1 , Add1~1, HW1, 1
instance = comp, \bits_count~4 , bits_count~4, HW1, 1
instance = comp, \bits_count[3] , bits_count[3], HW1, 1
instance = comp, \always1~0 , always1~0, HW1, 1
instance = comp, \bits_count~2 , bits_count~2, HW1, 1
instance = comp, \bits_count[0] , bits_count[0], HW1, 1
instance = comp, \bits_count~5 , bits_count~5, HW1, 1
instance = comp, \bits_count[1] , bits_count[1], HW1, 1
instance = comp, \write_value[2]~input , write_value[2]~input, HW1, 1
instance = comp, \catched_val[2] , catched_val[2], HW1, 1
instance = comp, \write_value[0]~input , write_value[0]~input, HW1, 1
instance = comp, \catched_val[0]~feeder , catched_val[0]~feeder, HW1, 1
instance = comp, \catched_val[0] , catched_val[0], HW1, 1
instance = comp, \write_value[3]~input , write_value[3]~input, HW1, 1
instance = comp, \catched_val[3] , catched_val[3], HW1, 1
instance = comp, \Mux0~0 , Mux0~0, HW1, 1
instance = comp, \Mux0~1 , Mux0~1, HW1, 1
instance = comp, \write_value[4]~input , write_value[4]~input, HW1, 1
instance = comp, \catched_val[4] , catched_val[4], HW1, 1
instance = comp, \write_value[5]~input , write_value[5]~input, HW1, 1
instance = comp, \catched_val[5] , catched_val[5], HW1, 1
instance = comp, \uart_txd~2 , uart_txd~2, HW1, 1
instance = comp, \write_value[6]~input , write_value[6]~input, HW1, 1
instance = comp, \catched_val[6] , catched_val[6], HW1, 1
instance = comp, \uart_txd~7 , uart_txd~7, HW1, 1
instance = comp, \uart_txd~4 , uart_txd~4, HW1, 1
instance = comp, \uart_txd~3 , uart_txd~3, HW1, 1
instance = comp, \uart_txd~5 , uart_txd~5, HW1, 1
instance = comp, \Equal2~0 , Equal2~0, HW1, 1
instance = comp, \Equal2~1 , Equal2~1, HW1, 1
instance = comp, \Equal2~2 , Equal2~2, HW1, 1
instance = comp, \uart_txd~6 , uart_txd~6, HW1, 1
instance = comp, \uart_txd~reg0 , uart_txd~reg0, HW1, 1
instance = comp, \write_value[7]~input , write_value[7]~input, HW1, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
